@page "/myaccount"
@inject UserAccountService service

<h1>Account Page</h1>

<div class="container">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Product Id</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Description</th>
                    <th>Delete Product</th>
                </tr>
            </thead>
            <tbody>
                @if (Accounts.Any()) {
                    @foreach (var account in Accounts) {
                <tr @onclick="(() => SetAccountForUpdate(account))">
                    <td>@account.Id</td>
                    <td>@account.Username</td>
                    <td>@account.Password</td>
                    <td>@account.Name</td>
                    <td>@account.Email</td>
                    <td><button class="btn btn-danger" @onclick="(() => DeleteAccount(account))">Delete</button></td>
                </tr>
                    }
                }
                else {
                    <tr><td colspan="6"><strong>No accoutns </strong></td></tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">
            <div class="p-3 mb-3 bg-primary text-white text-center">Add New Product</div>
            <EditForm Model="@NewAccount">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" class="form-control" @bind-value="@NewAccount.Username" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="text" id="password" class="form-control" @bind="@NewAccount.Password" />
                </div>
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" class="form-control" @bind="@NewAccount.Name" />
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="text" id="email" class="form-control" @bind="@NewAccount.Email" />
                </div>
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewAccount"> Add Account</button>
                </div>
            </EditForm>
        </div>
        <div class="col-5 bg-light m-2 justify-content-end">
            <div class="p-3 mb-1 bg-primary text-white text-center">Update Product</div>
            <EditForm Model="@UpdateAccount">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" class="form-control" @bind-value="@NewAccount.Username" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="text" id="password" class="form-control" @bind="@NewAccount.Password" />
                </div>
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" class="form-control" @bind="@NewAccount.Name" />
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="text" id="email" class="form-control" @bind="@NewAccount.Email" />
                </div>
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="UpdateAccountData"> Update Account</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code{

    List<UserAccount> Accounts;
    public UserAccount NewAccount { get; set; } = new UserAccount();
    public UserAccount UpdateAccount = new UserAccount();

    protected override async Task OnInitializedAsync() {
        await RefreshAccounts();
    }
    private async Task RefreshAccounts() {
        Accounts = await service.GetAccountAsync();
    }

    private async Task AddNewAccount() {
        await service.AddAccountAsync(NewAccount);
        NewAccount = new UserAccount();
        await RefreshAccounts();
    }

    private void SetAccountForUpdate(UserAccount account) {
        UpdateAccount = account;
    }
    private async Task UpdateAccountData() {
        await service.UpdateAccountAsync(UpdateAccount);
        await RefreshAccounts();
    }
    private async Task DeleteAccount(UserAccount account) {
        await service.DeleteAccountAsync(account);
        await RefreshAccounts();
    }
}
